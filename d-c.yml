version: "2"

services:
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_APIGW_BASE_URL: "https://datadaan.bhashini.gov.in/api/"
    volumes: 
      - node_modules:/app/node_modules
      - client_build:/app/build

  mongodb:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    command: mongod --auth
    env_file:
      - ./.env.prod
    environment:
      MONGODB_DATA_DIR: /data/db
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 5000
    ports:
      - 5000:5000
    env_file:
      - ./.env.prod
    volumes:
      - appdata:/var/www/
    depends_on: 
      - mongodb

  nginx:
    build: ./nginx
    image: evgeniy-khyst/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - client_build:/var/www/html
      - ./vhosts:/etc/nginx/vhosts
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
  node_modules:
  client_build:
  mongodbdata:
    external: true
  appdata:
    external: true